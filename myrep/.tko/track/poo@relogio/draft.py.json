{
    "patches": [
        {
            "label": "2025-10-20_19-09-55",
            "content": "@@ -1,19 +1,21 @@\n class \n-Watch\n+Relogio\n :%0A    de\n@@ -242,269 +242,8 @@\n 2%7D%22%0A\n-%0A%0Adef main():%0A    relogio = Watch(0,0,0)%0A    while True:%0A        line: str = input()%0A        print(%22$%22 + line)%0A        args: list%5Bstr%5D = line.split (%22%22)%0A        if args %5B0%5D == %22end%22:%0A            break%0A        if args %5B0%5D == %22show%22:%0A            print(relogio)%0Amain()\n+    \n",
            "lines": "9"
        },
        {
            "label": "2025-10-20_19-15-00",
            "content": "@@ -386,17 +386,16 @@\n split (%22\n- \n %22)%0A     \n",
            "lines": "21"
        },
        {
            "label": "2025-10-20_19-15-08",
            "content": "@@ -500,191 +500,8 @@\n io)%0A\n-        if args %5B0%5D == %22set%22:%0A            hora: int = int(args%5B1%5D)%0A            min: int = int(args %5B2%5D)%0A            seg: int = int(args %5B3%5D)%0A            relogio = Watch(hora,min,seg)%0A\n main\n",
            "lines": "21"
        },
        {
            "label": "2025-10-20_19-17-15",
            "content": "@@ -241,158 +241,8 @@\n %7D%22%0A%0A\n-    def setTime (self,timeAccept: int):%0A        if self.__hora %3E 23 and self.__min %3E 59 and self.__seg %3E 59:%0A            print(%22fail: hora invalida%22)%0A\n %0Adef\n",
            "lines": "26"
        },
        {
            "label": "2025-10-20_19-21-24",
            "content": "@@ -252,24 +252,29 @@\n  set\n-Hora\n+Time \n (self,\n- valor\n+timeAccept\n : in\n@@ -292,215 +292,106 @@\n  if \n-val\n+self.__h\n or\n+a\n  %3E 23 \n-or valor %3C 0:%0A            print(%22fail: hora invalida%22)%0A            return%0A        self.__hora = valor%0A%0A    def setMin (self, valor:int):%0A        if valor %3E 59 or valor %3C 0:%0A            print()    \n+and self.__min %3E 59 and self.__seg %3E 59:%0A            print(%22fail: hora invalida%22)\n %0A%0Ade\n@@ -833,42 +833,8 @@\n eg)%0A\n-            relogio.setHora(hora)%0A\n main\n",
            "lines": "29"
        },
        {
            "label": "2025-10-20_19-54-13",
            "content": "@@ -376,16 +376,35 @@\n         \n+self.__hora = valor\n %0A%0A    de\n",
            "lines": "36"
        },
        {
            "label": "2025-10-20_19-54-53",
            "content": "@@ -365,27 +365,23 @@\n     \n-self.__hora = valor\n+return%0A        \n %0A%0A  \n",
            "lines": "36"
        },
        {
            "label": "2025-10-20_19-55-30",
            "content": "@@ -357,23 +357,8 @@\n     \n-        return%0A\n     \n@@ -386,60 +386,8 @@\n or%0A%0A\n-    def getHora (self):%0A        return self.__hora%0A%0A\n     \n",
            "lines": "35"
        },
        {
            "label": "2025-10-20_20-02-49",
            "content": "@@ -359,32 +359,40 @@\n           return\n+%0A       \n  self.__hora = v\n@@ -395,25 +395,16 @@\n  = valor\n-%0A        \n %0A%0A    de\n",
            "lines": "39"
        },
        {
            "label": "2025-10-20_20-03-02",
            "content": "@@ -367,24 +367,16 @@\n   return\n-%0A       \n  self.__\n@@ -387,16 +387,25 @@\n  = valor\n+%0A        \n %0A%0A    de\n",
            "lines": "39"
        },
        {
            "label": "2025-10-20_20-03-14",
            "content": "@@ -848,16 +848,21 @@\n     hora\n+: int\n  = int(a\n@@ -879,16 +879,121 @@\n         \n+  min: int = int(args %5B2%5D)%0A            seg: int = int(args %5B3%5D)%0A            relogio = Watch(hora,min,seg)\n %0A       \n",
            "lines": "39"
        },
        {
            "label": "2025-10-20_20-04-21",
            "content": "@@ -141,35 +141,8 @@\n  seg\n-%0A        self.setHora(hora)\n %0A%0A  \n@@ -848,21 +848,16 @@\n     hora\n-: int\n  = int(a\n@@ -878,113 +878,8 @@\n     \n-  min: int = int(args %5B2%5D)%0A            seg: int = int(args %5B3%5D)%0A            relogio = Watch(hora,min,seg)\n %0A   \n",
            "lines": "37"
        },
        {
            "label": "2025-10-20_20-05-59",
            "content": "@@ -83,17 +83,20 @@\n _hora = \n-0\n+hora\n %0A       \n@@ -109,17 +109,19 @@\n __min = \n-0\n+min\n %0A       \n@@ -134,17 +134,19 @@\n __seg = \n-0\n+seg\n %0A       \n",
            "lines": "40"
        },
        {
            "label": "2025-10-20_20-06-18",
            "content": "@@ -83,20 +83,17 @@\n _hora = \n-hora\n+0\n %0A       \n@@ -106,19 +106,17 @@\n __min = \n-min\n+0\n %0A       \n@@ -129,19 +129,44 @@\n __seg = \n-seg\n+0%0A        self.setHora(hora)\n %0A%0A    de\n",
            "lines": "40"
        },
        {
            "label": "2025-10-20_20-06-32",
            "content": "@@ -1,9 +1,8 @@\n-%0A\n class Wa\n",
            "lines": "39"
        },
        {
            "label": "2025-10-21_19-05-43",
            "content": "@@ -1010,16 +1010,20 @@\n gio.\n-g\n+s\n etHora(\n+hora\n )%0Ama\n",
            "lines": "40"
        },
        {
            "label": "2025-10-21_19-06-29",
            "content": "@@ -321,23 +321,16 @@\n         \n-return \n print(%22f\n@@ -350,16 +350,35 @@\n alida%22)%0A\n+            return%0A\n         \n",
            "lines": "40"
        },
        {
            "label": "2025-10-21_19-07-38",
            "content": "@@ -317,24 +317,31 @@\n             \n+return \n print(%22fail:\n@@ -361,31 +361,8 @@\n a%22)%0A\n-            return%0A    \n     \n",
            "lines": "39"
        },
        {
            "label": "2025-10-21_19-08-20",
            "content": "@@ -369,32 +369,36 @@\n  return%0A        \n+    \n self.__hora = se\n@@ -395,27 +395,21 @@\n _hora = \n-self.__h\n+val\n or\n-a\n %0A%0A    de\n",
            "lines": "40"
        },
        {
            "label": "2025-10-21_19-09-08",
            "content": "@@ -391,21 +391,27 @@\n _hora = \n-val\n+self.__h\n or\n+a\n %0A%0A    de\n@@ -1016,20 +1016,16 @@\n gio.\n-s\n+g\n etHora(\n-hora\n )%0Ama\n",
            "lines": "40"
        },
        {
            "label": "2025-10-21_19-09-38",
            "content": "@@ -542,246 +542,10 @@\n int(\n-%22fail: minutos invalidos%22) %0A            return%0A        self.__min = valor%0A%0A    def setSeg (self, valor: int):%0A        if valor %3E 59 or valor %3C 0:%0A            print (%22fail: segundos invalidos%22)%0A            return%0A        self.__seg = valor\n+) \n    %0A\n@@ -967,53 +967,29 @@\n ogio\n-.setHora(hora)%0A            relogio.setMin(min\n+ = Watch(hora,min,seg\n )%0A  \n@@ -1013,17 +1013,18 @@\n .set\n-Min(min)%0A\n+Hora(hora)\n %0Amai\n",
            "lines": "40"
        },
        {
            "label": "2025-10-21_19-17-19",
            "content": "@@ -1273,15 +1273,15 @@\n .set\n-Seg(seg\n+Min(min\n )%0A%0Am\n",
            "lines": "50"
        },
        {
            "label": "2025-10-21_19-17-39",
            "content": "@@ -551,16 +551,17 @@\n : minuto\n+s\n  invalid\n@@ -561,16 +561,17 @@\n invalido\n+s\n %22) %0A    \n@@ -717,16 +717,17 @@\n  segundo\n+s\n  invalid\n@@ -727,16 +727,17 @@\n invalido\n+s\n %22)%0A     \n",
            "lines": "50"
        },
        {
            "label": "2025-10-21_19-17-56",
            "content": "@@ -781,300 +781,8 @@\n   %0A%0A\n-    def nextSecond (self, valorHora: int, valorMin: int, valorSeg: int):%0A        if valorSeg %3E 59:%0A            self.__seg = 0%0A            self.__min += 1%0A        if valorMin %3E 59:%0A            self.__min = 0%0A            self.__hora += 1%0A        if valorHora %3E 23:%0A            self.__hora = 0%0A%0A\n def \n",
            "lines": "50"
        },
        {
            "label": "2025-10-21_19-24-11",
            "content": "@@ -1570,69 +1570,8 @@\n eg)%0A\n-        if args %5B0%5D == %22next%22:%0A            relogio.nextSecond\n %0Amai\n",
            "lines": "60"
        },
        {
            "label": "2025-10-21_19-25-13",
            "content": "@@ -797,24 +797,70 @@\n Second (self\n+, valorHora: int, valorMin: int, valorSeg: int\n ):%0A        i\n@@ -861,24 +861,22 @@\n      if \n-self.__s\n+valorS\n eg %3E 59:\n@@ -942,24 +942,22 @@\n      if \n-self.__m\n+valorM\n in %3E 59:\n@@ -1024,24 +1024,22 @@\n      if \n-self.__h\n+valorH\n ora %3E 23\n",
            "lines": "61"
        },
        {
            "label": "2025-10-21_19-26-12",
            "content": "@@ -1587,17 +1587,15 @@\n xtSecond\n-()\n %0Amain()\n",
            "lines": "61"
        },
        {
            "label": "2025-10-21_19-26-44",
            "content": "@@ -452,116 +452,8 @@\n hora\n-%0A    %0A    def getMin (self):%0A        return self.__min%0A    %0A    def getSeg (self):%0A        return self.__seg\n %0A%0A  \n@@ -824,19 +824,15 @@\n elf.\n-getSeg() !=\n+__seg %3E\n  59:\n@@ -853,46 +853,17 @@\n elf.\n-setSeg(self.getSeg()+1)%0A%0A        else:\n+__seg = 0\n %0A   \n@@ -880,23 +880,19 @@\n elf.\n-setSeg(0) %0A    \n+__min += 1%0A\n     \n@@ -907,28 +907,20 @@\n elf.\n-getMin() !=\n+__min %3E\n  59:%0A\n-    \n     \n@@ -936,86 +936,18 @@\n elf.\n-setMin(self.getMin()+1)%0A            else: %0A                self.setMin(0)%0A    \n+__min = 0%0A\n     \n@@ -958,111 +958,54 @@\n     \n-if \n self.\n-getHora() != 23:%0A                    self.setHora (self.getHora()+1)%0A                else:%0A    \n+__hora += 1%0A        if self.__hora %3E 23:%0A\n     \n@@ -1016,27 +1016,23 @@\n     \n-    \n self.\n-setHora(0)\n+__hora = 0\n %0A%0Ade\n",
            "lines": "61"
        },
        {
            "label": "2025-10-21_19-40-30",
            "content": "@@ -1573,194 +1573,8 @@\n io)%0A\n-        if args %5B0%5D == %22init%22:%0A            hora: int = int(args%5B1%5D)%0A            min: int = int(args %5B2%5D)%0A            seg: int = int(args %5B3%5D)%0A            relogio = Watch(hora, min, seg)%0A\n     \n",
            "lines": "72"
        },
        {
            "label": "2025-10-21_19-43-44",
            "content": "@@ -88,26 +88,12 @@\n a = \n-self.setHora(\n hora\n-)\n %0A   \n@@ -114,24 +114,11 @@\n n = \n-self.setMin(\n min\n-)\n %0A   \n@@ -141,22 +141,9 @@\n = se\n-lf.setSeg(seg)\n+g\n %0A%0A  \n",
            "lines": "77"
        },
        {
            "label": "2025-10-21_19-45-34",
            "content": "@@ -88,115 +88,85 @@\n a = \n-0%0A        self.__min = 0%0A        self.__seg = 0%0A        self.setHora(hora)%0A        self.setMin(min)%0A       \n+self.setHora(hora)%0A        self.__min = self.setMin(min)%0A        self.__seg =\n  sel\n@@ -175,24 +175,25 @@\n setSeg(seg)%0A\n+%0A\n     def __st\n",
            "lines": "77"
        },
        {
            "label": "2025-10-21_19-46-24",
            "content": "\nclass Watch:\n    def __init__(self, hora: int, min: int, seg: int):\n        self.__hora = 0\n        self.__min = 0\n        self.__seg = 0\n        self.setHora(hora)\n        self.setMin(min)\n        self.setSeg(seg)\n    def __str__(self) -> str:\n        return f\"{self.__hora:02}:{self.__min:02}:{self.__seg:02}\"\n\n    def setHora(self, valor: int):\n        if valor > 23 or valor < 0:\n            print(\"fail: hora invalida\")\n            return\n        self.__hora = valor\n\n    def getHora (self):\n        return self.__hora\n    \n    def getMin (self):\n        return self.__min\n    \n    def getSeg (self):\n        return self.__seg\n\n    def setMin (self, valor:int):\n        if valor > 59 or valor < 0:\n            print(\"fail: minuto invalido\") \n            return\n        self.__min = valor\n\n    def setSeg (self, valor: int):\n        if valor > 59 or valor < 0:\n            print (\"fail: segundo invalido\")\n            return\n        self.__seg = valor   \n\n    def nextSecond (self):\n        if self.getSeg() != 59:\n            self.setSeg(self.getSeg()+1)\n\n        else:\n            self.setSeg(0) \n            if self.getMin() != 59:\n                self.setMin(self.getMin()+1)\n            else: \n                self.setMin(0)\n                if self.getHora() != 23:\n                    self.setHora (self.getHora()+1)\n                else:\n                    self.setHora(0)\n\ndef main():\n    relogio = Watch(0,0,0)\n    while True:\n        line: str = input()\n        print(\"$\" + line)\n        args: list[str] = line.split (\" \")\n        if args [0] == \"end\":\n            break\n        if args [0] == \"show\":\n            print(relogio)\n        if args [0] == \"init\":\n            hora: int = int(args[1])\n            min: int = int(args [2])\n            seg: int = int(args [3])\n            relogio = Watch(hora, min, seg)\n        if args [0] == \"set\":\n            hora: int = int(args[1])\n            min: int = int(args [2])\n            seg: int = int(args [3])\n            relogio.setHora(hora)\n            relogio.setMin(min)\n            relogio.setSeg(seg)\n        if args [0] == \"next\":\n            relogio.nextSecond()\nmain()",
            "lines": "79"
        }
    ]
}